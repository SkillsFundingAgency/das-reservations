@model SelectReservationViewModel
@{
    ViewData["Title"] = "Reservations";

    var firstReservationId = Model.AvailableReservations.FirstOrDefault()?.ReservationId;

    var customErrorKeys = new Dictionary<string, string> { { "SelectedReservationId", $"SelectedReservationId-{firstReservationId}" } };

    ViewData["CustomErrorKeys"] = customErrorKeys;

    if (Configuration["AuthType"].Equals("employer", StringComparison.CurrentCultureIgnoreCase))
    {
        ViewBag.GaData.Vpv = "/accounts/reservations/select";
    }
    else
    {
        ViewBag.GaData.Vpv = "/reservations/select";
    }
}

<a href="@Model.BackLink" class="govuk-back-link">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            <partial name="_PageErrorsOverview" />

            <h1 class="govuk-heading-l">Choose a Reservation</h1>

            <form method="post">
                <input asp-for="CohortReference" type="hidden" />
                <input asp-for="AccountId" type="hidden" />
                <input asp-for="TransferSenderId" type="hidden"/>
                <input asp-for="ProviderId" type="hidden"/>
                <input asp-for="JourneyData" type="hidden"/>

                <div class="govuk-form-group @(ViewData.ModelState.IsValid ? "" : "govuk-form-group--error")">
                    <fieldset class="govuk-fieldset">                    
                        @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ContainsKey("SelectedReservationId"))
                        {
                            <span id="confirm-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState["SelectedReservationId"].Errors.First().ErrorMessage
                            </span>
                        }
                        <div class="govuk-radios">
                            @foreach (var availableReservation in Model.AvailableReservations)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="SelectedReservationId-@availableReservation.ReservationId" name="SelectedReservationId" type="radio" value="@availableReservation.ReservationId">
                                    <label class="govuk-label govuk-radios__label govuk-label--s" for="SelectedReservationId-@availableReservation.ReservationId">
                                        @availableReservation.CourseDescription starting between @availableReservation.TrainingDateDescription
                                    </label>
                                    <span class="govuk-hint govuk-radios__hint">
                                        Created in @availableReservation.CreatedDateDescription
                                    </span>
                                </div>

                            }

                            <div class="govuk-radios__divider">or</div>

                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="CreateNew" name="SelectedReservationId" type="radio" value="@Guid.Empty.ToString().Replace("0","9")">
                                <label class="govuk-label govuk-radios__label govuk-label--s" for="CreateNew">
                                    Reserve new funding
                                </label>
                                <span class="govuk-hint govuk-radios__hint">
                                    Continue adding apprentice details
                                </span>
                            </div>

                        </div>
                    </fieldset>
                </div>

                <button type="submit" draggable="false" class="govuk-button">
                    Save and continue
                </button>
            </form>
        </div>
    </div>
</main>
@using SFA.DAS.Reservations.Web.Infrastructure
@model SelectLegalEntityViewModel
@{
    ViewData["Title"] = "Choose which organisation youâ€™ll be reserving funding for";

    var accountLegalEntityPublicHashedId = Model.LegalEntities.FirstOrDefault()?.AccountLegalEntityPublicHashedId;

    var customErrorKeys = new Dictionary<string, string> {{ "LegalEntity", $"LegalEntity-{accountLegalEntityPublicHashedId}" }};

    ViewData["CustomErrorKeys"] = customErrorKeys;
}

@{
    ViewBag.GaData.Vpv = "/accounts/reservations/select-course";
}

<a asp-route="@RouteNames.EmployerIndex" class="govuk-back-link">Back</a>
<main class="govuk-main-wrapper " id="main-content" role="main">
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <partial name="_pageErrorsOverview" />

        <h1 class="govuk-heading-xl">Choose organisation</h1>

        <form method="post" asp-route="@RouteNames.EmployerSelectLegalEntity" class="validate-auto-complete">
            <div class="govuk-form-group @(ViewData.ModelState.IsValid ? "" : "govuk-form-group--error")">
                <span id="choose-apprenticeship-hint" class="govuk-hint">
                    Which organisation is named on the contract with the training provider for the apprentices you'd like to add?
                </span>
                <fieldset class="govuk-fieldset">

                    @if (ViewData.ModelState.ContainsKey("LegalEntity") && ViewData.ModelState["LegalEntity"].Errors.Any())
                    {
                        <span id="legal-entity-error" class="govuk-error-message">
                            @ViewData.ModelState["LegalEntity"].Errors.First().ErrorMessage
                        </span>
                    }

                    <div class="govuk-radios">
                        @foreach (var legalEntity in Model.LegalEntities)
                        {
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="LegalEntity-@legalEntity.AccountLegalEntityPublicHashedId" name="LegalEntity" type="radio" value="@legalEntity.AccountLegalEntityPublicHashedId" @(legalEntity.Selected ? "checked" : "")>
                                <label class="govuk-label govuk-radios__label" for="LegalEntity-@legalEntity.AccountLegalEntityPublicHashedId">
                                    @legalEntity.Name
                                </label>
                            </div>
                        }
                    </div>
                </fieldset>
            </div>

            <details class="govuk-details" data-module="govuk-details">
                <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">
                        What is a contract for services?
                    </span>
                </summary>
                <div class="govuk-details__text">
                    <p>A contract for services is a formal agreement between a buyer and a supplier.</p>
                    <p>In this case, the contract is between the organisation that's buying apprenticeship training for their apprentices and the training provider that's training the apprentices.</p>
                    <p>If you're and employer-provider, for example, you won't need a contract for services as your organisation is both the buyer and the supplier.</p>
                </div>
            </details>
            <button type="submit" class="govuk-button">
                Save and continue
            </button>
        </form>
    </div>
</div>
</main>

{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "environmentName": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "resourceGroupLocation": {
      "type": "string"
    },
    "frontEndAccessRestrictions": {
      "type": "array"
    },
    "sharedEnvResourceGroup": {
      "type": "string"
    },
    "sharedFrontEndAppServicePlanName": {
      "type": "string"
    },
    "sharedFrontEndSubnetResourceId": {
      "type": "string"
    },
    "sharedApimResourceGroup": {
      "type": "string"
    },
    "sharedApimName": {
      "type": "string"
    },    
    "configurationStorageConnectionString": {
      "type": "securestring"
    },
    "configNames": {
      "type": "string",
      "defaultValue": "SFA.DAS.Reservations.Web,SFA.DAS.EmployerAccountAPI:AccountApi,SFA.DAS.ProviderRelationships.Api.ClientV2,SFA.DAS.Encoding,SFA.DAS.Employer.GovSignIn,SFA.DAS.Provider.DfeSignIn"
    },
    "version": {
      "type": "string",
      "defaultValue": "1.0"
    },
    "certificateThumbprintsToLoad": {
      "type": "string"
    },
    "cdnUrl": {
      "type": "string"
    },
    "employerCustomHostname": {
      "type": "string"
    },
    "providerCustomHostname": {
      "type": "string"
    },
    "employerCertificateName": {
      "type": "string"
    },
    "providerCertificateName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "sharedManagementResourceGroup": {
      "type": "string"
    },
    "loggingRedisConnectionString": {
      "type": "securestring"
    },
    "featureToggleOn": {
      "type": "string"
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "stubAuth": {
        "type": "string"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
    "employerAppServiceName": "[concat(variables('resourceNamePrefix'), 'emp-as')]",
    "providerAppServiceName": "[concat(variables('resourceNamePrefix'), 'prv-as')]"
  },
  "resources": [
    {
      "apiVersion": "2020-10-01",
      "name": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/resourceGroups",
      "location": "[parameters('resourceGroupLocation')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('employerAppServiceName'), '-certificate-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('employerCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('providerAppServiceName'), '-certificate-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('providerCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      },
      "dependsOn": [
      ]
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('employerAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('employerAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('employerAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('employerAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('employerAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "Environment",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ResourceEnvironmentName",
                  "value": "[parameters('resourceEnvironmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[parameters('configNames')]"
                },
                {
                  "name": "Version",
                  "value": "[parameters('version')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('employerAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "AuthType",
                  "value": "employer"
                },
                {
                  "name": "WEBSITE_LOAD_CERTIFICATES",
                  "value": "[parameters('certificateThumbprintsToLoad')]"
                },
                {
                  "name": "FeatureToggleOn",
                  "value": "[parameters('featureToggleOn')]"
                },
                {
                    "name": "StubAuth",
                    "value": "[parameters('stubAuth')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('employerCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('employerAppServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('providerAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('providerAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('providerAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('providerAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('providerAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "Environment",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[parameters('configNames')]"
                },
                {
                  "name": "Version",
                  "value": "[parameters('version')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat(variables('providerAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "AuthType",
                  "value": "provider"
                },
                {
                  "name": "FeatureToggleOn",
                  "value": "[parameters('featureToggleOn')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('providerCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('providerAppServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[concat(variables('employerAppServiceName'), '-apim-subscription-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedApimResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimName": {
            "value": "[parameters('sharedApimName')]"
          },
          "subscriptionName": {
            "value": "[variables('employerAppServiceName')]"
          },
          "subscriptionScope": {
            "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/ReservationsOuterApi')]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[concat(variables('providerAppServiceName'), '-apim-subscription-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedApimResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimName": {
            "value": "[parameters('sharedApimName')]"
          },
          "subscriptionName": {
            "value": "[variables('providerAppServiceName')]"
          },
          "subscriptionScope": {
            "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/ReservationsOuterApi')]"
          }
        }
      }
    }    
  ],
  "outputs": {
    "ResourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    },
    "EmployerAppServiceName": {
      "type": "string",
      "value": "[variables('employerAppServiceName')]"
    },
    "ProviderAppServiceName": {
      "type": "string",
      "value": "[variables('providerAppServiceName')]"
    }
  }
}